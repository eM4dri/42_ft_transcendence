
version: '3.8'
services:
  test-back:
    user: "${UID}:${GID}"
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: test-api
    networks:
      - docker_network_test
    ports:
      - 3333:3333
    environment:
       DB_URL : postgresql://postgres:123@test-db:5432/nest?schema=public
       API_PORT : 3333
       API_URL : http://localhost:3333
       FORTYTWO_CLIENT_ID : client
       FORTYTWO_CLIENT_SECRET : secret
       JWT_SECRET : secret
       JWT_EXPIRES_IN : 86400000
       JWT_REFRESH : refresh
       JWT_REFRESH_EXPIRE : 8640000
       FAKE_LOGIN_URL : /login/fake
    depends_on:
      test-db:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "yarn", "healthcheck"]
      interval: 15s
      timeout: 10s
      retries: 5
    volumes:
      - ./backend/srcs:/app
      - /app/node_modules

  test-db:
    image: postgres:15-alpine
    container_name: test-db
    networks:
      - docker_network_test
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: nest
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  docker_network_test:
    driver: bridge
