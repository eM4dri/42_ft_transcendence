# TODO use ENV aliases
version: '3.8'
services:
  dev-db:
    image: postgres:15-alpine
    container_name: dev-db
    ports: 
     - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    # env_file:
    #   - .env
    restart: on-failure
    networks: 
    - dev_network

  standalone-db:
    image: postgres:15-alpine
    container_name: "${DB_HOST}"
    networks: 
    - docker_network
    expose:
     - "${DB_PORT}"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    # env_file:
    #   - .env
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  nest-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-api
    networks: 
    - docker_network
    ports:
      - 3000:3000
    environment:
      DATABASE_URL: "${DATABASE_URL}"
    # env_file:
    #   - .env
    depends_on:
      standalone-db:
        condition: service_healthy
    restart: on-failure

  adminer:
    image: adminer
    container_name: adminer
    networks: 
    - docker_network
    restart: on-failure
    ports:
      - 8080:8080

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    networks: 
    - docker_network
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - portainer_data:/data
    restart: unless-stopped
    ports:
    - 9443:9443 # https
    - 9000:9000 # http 

volumes:
  portainer_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: "${PORTAINER_VOLUME_PATH}"

networks:
  docker_network:
    driver: bridge
  dev_network:


